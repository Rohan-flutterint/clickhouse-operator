apiVersion: "clickhouse.altinity.com/v1"
kind: "ClickHouseOperatorConfiguration"
metadata:
  name: "chop-config-01"
spec:
  ################################################
  ##
  ## Watch Section
  ##
  ################################################
  watch:
    # List of namespaces where clickhouse-operator watches for events.
    # Concurrently running operators should watch on different namespaces.
    # IMPORTANT
    # Regexp is applicable.
    namespaces:
      include: []
      exclude: []

  clickhouse:
    configuration:
      ################################################
      ##
      ## Configuration Files Section
      ##
      ################################################
      file:
        path:
          # Path to the folder where ClickHouse configuration files common for all instances within a CHI are located.
          common: config.d
          # Path to the folder where ClickHouse configuration files unique for each instance (host) within a CHI are located.
          host: conf.d
          # Path to the folder where ClickHouse configuration files with users settings are located.
          # Files are common for all instances within a CHI.
          user: users.d
      ################################################
      ##
      ## Configuration Users Section
      ##
      ################################################
      user:
        default:
          # Default values for ClickHouse user configuration
          # 1. user/profile - string
          # 2. user/quota - string
          # 3. user/networks/ip - multiple strings
          # 4. user/password - string
          profile: default
          quota: default
          networksIP:
            - "::1"
            - "127.0.0.1"
          password: "default"
      ################################################
      ##
      ## Configuration Network Section
      ##
      ################################################
      network:
        # Default host_regexp to limit network connectivity from outside
        hostRegexpTemplate: "(chi-{chi}-[^.]+\\d+-\\d+|clickhouse\\-{chi})\\.{namespace}\\.svc\\.cluster\\.local$"
    ################################################
    ##
    ## Access to ClickHouse instances
    ##
    ################################################
    access:
      # ClickHouse credentials (username, password and port) to be used by operator to connect to ClickHouse instances
      # for:
      # 1. Metrics requests
      # 2. Schema maintenance
      # User with such credentials can be specified in additional ClickHouse .xml config files,
      # located in `chUsersConfigsPath` folder
      username: "clickhouse_operator"
      password: "clickhouse_operator_password"
      secret:
        # Location of k8s Secret with username and password to be used by operator to connect to ClickHouse instances
        # Can be used instead of explicitly specified username and password
        namespace: ""
        name: ""
      # Port where to connect to ClickHouse instances to
      port: 8123

  ################################################
  ##
  ## Templates Section
  ##
  ################################################
  template:
    chi:
      # Path to the folder where ClickHouseInstallation .yaml manifests are located.
      # Manifests are applied in sorted alpha-numeric order.
      path: templates.d

  ################################################
  ##
  ## Reconcile Section
  ##
  ################################################
  reconcile:
    # Reconcile runtime settings
    runtime:
      # Max number of concurrent CHI reconciles in progress
      reconcileCHIsThreadsNumber: 10

      # The operator reconciles shards concurrently in each CHI with the following limitations:
      #   1. Number of shards being reconciled (and thus having hosts down) in each CHI concurrently
      #      can not be greater than 'reconcileShardsThreadsNumber'.
      #   2. Percentage of shards being reconciled (and thus having hosts down) in each CHI concurrently
      #      can not be greater than 'reconcileShardsMaxConcurrencyPercent'.
      #   3. The first shard is always reconciled alone. Concurrency starts from the second shard and onward.
      # Thus limiting number of shards being reconciled (and thus having hosts down) in each CHI by both number and percentage

      # Max number of concurrent shard reconciles within one cluster in progress
      reconcileShardsThreadsNumber: 5
      # Max percentage of concurrent shard reconciles within one cluster in progress
      reconcileShardsMaxConcurrencyPercent: 50

    # Reconcile StatefulSet scenario
    statefulSet:
      # Create StatefulSet scenario
      create:
        # What to do in case created StatefulSet is not in 'Ready' after `reconcile.statefulSet.update.timeout` seconds
        # Possible options:
        # 1. abort - abort the process, do nothing with the problematic StatefulSet, leave it as it is,
        #    do not try to fix or delete or update it, just abort reconcile cycle.
        #    Do not proceed to the next StatefulSet(s) and wait for an admin to assist.
        # 2. delete - delete newly created problematic StatefulSet and follow 'abort' path afterwards.
        # 3. ignore - ignore an error, pretend nothing happened, continue reconcile and move on to the next StatefulSet.
        onFailure: ignore

      # Update StatefulSet scenario
      update:
        # How many seconds to wait for created/updated StatefulSet to be 'Ready'
        timeout: 300
        # How many seconds to wait between checks/polls for created/updated StatefulSet status
        pollInterval: 5
        # What to do in case updated StatefulSet is not in 'Ready' after `reconcile.statefulSet.update.timeout` seconds
        # Possible options:
        # 1. abort - abort the process, do nothing with the problematic StatefulSet, leave it as it is,
        #    do not try to fix or delete or update it, just abort reconcile cycle.
        #    Do not proceed to the next StatefulSet(s) and wait for an admin to assist.
        # 2. rollback - delete Pod and rollback StatefulSet to previous Generation.
        #    Pod would be recreated by StatefulSet based on rollback-ed StatefulSet configuration.
        #    Follow 'abort' path afterwards.
        # 3. ignore - ignore an error, pretend nothing happened, continue reconcile and move on to the next StatefulSet.
        onFailure: abort

    # Reconcile Host scenario
    host:
      # Whether the operator during reconcile procedure should wait for a ClickHouse host:
      #   - to be excluded from a ClickHouse cluster
      #   - to complete all running queries
      #   - to be included into a ClickHouse cluster
      # respectfully before moving forward with host reconcile
      wait:
        exclude: true
        queries: true
        include: false
        # The operator during reconcile procedure should wait for replicas to catch-up
        # replication delay a.k.a replication lag for the following replicas
        replicas:
          # All replicas (new and known earlier) are explicitly requested to wait for replication to catch-up
          all: no
          # New replicas only are requested to wait for replication to catch-up
          new: yes
          # Replication catch-up is considered to be completed as soon as replication delay
          # a.k.a replication lag - calculated as "MAX(absolute_delay) FROM system.replicas"
          # is within this specified delay (in seconds)
          delay: 10
        probes:
          # Whether the operator during host launch procedure should wait for startup probe to succeed.
          # In case probe is unspecified wait is assumed to be completed successfully.
          # Default option value is to do not wait.
          startup: no
          # Whether the operator during host launch procedure should wait for readiness probe to succeed.
          # In case probe is unspecified wait is assumed to be completed successfully.
          # Default option value is to wait.
          readiness: yes

  ################################################
  ##
  ## Annotations management
  ##
  ################################################
  annotation:
    # Applied when:
    #  1. Propagating annotations from the CHI's `metadata.annotations` to child objects' `metadata.annotations`,
    #  2. Propagating annotations from the CHI Template's `metadata.annotations` to CHI's `metadata.annotations`,
    # Include annotations from the following list:
    # Applied only when not empty. Empty list means "include all, no selection"
    include: []
    # Exclude annotations from the following list:
    exclude: []

  ################################################
  ##
  ## Labels management
  ##
  ################################################
  label:
    # Applied when:
    #  1. Propagating labels from the CHI's `metadata.labels` to child objects' `metadata.labels`,
    #  2. Propagating labels from the CHI Template's `metadata.labels` to CHI's `metadata.labels`,
    # Include labels from the following list:
    # Applied only when not empty. Empty list means "include all, no selection"
    include: []
    # Exclude labels from the following list:
    exclude: []
    # Whether to append *Scope* labels to StatefulSet and Pod.
    # Full list of available *scope* labels check in labeler.go
    #  LabelShardScopeIndex
    #  LabelReplicaScopeIndex
    #  LabelCHIScopeIndex
    #  LabelCHIScopeCycleSize
    #  LabelCHIScopeCycleIndex
    #  LabelCHIScopeCycleOffset
    #  LabelClusterScopeIndex
    #  LabelClusterScopeCycleSize
    #  LabelClusterScopeCycleIndex
    #  LabelClusterScopeCycleOffset
    appendScope: "no"

  ################################################
  ##
  ## StatefulSet management
  ##
  ################################################
  statefulSet:
    revisionHistoryLimit: 0

  ################################################
  ##
  ## Pod management
  ##
  ################################################
  pod:
    # Grace period for Pod termination.
    # How many seconds to wait between sending
    # SIGTERM and SIGKILL during Pod termination process.
    # Increase this number is case of slow shutdown.
    terminationGracePeriod: 30

  ################################################
  ##
  ## Log parameters
  ##
  ################################################
  logger:
    logtostderr: "true"
    alsologtostderr: "false"
    v: "1"
    stderrthreshold: ""
    vmodule: ""
    log_backtrace_at: ""
